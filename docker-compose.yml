version: '3.7'

networks:
  traefik-network:
    external: true

services:
  traefik:
    image: traefik:v2.5
    command:
      - "--api.insecure=false"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
#      - "--certificatesresolvers.myresolver.acme.httpchallenge=true"
#      - "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web"
#      - "--certificatesresolvers.myresolver.acme.email=your-ayush@gmail.com"
#      - "--certificatesresolvers.myresolver.acme.storage=acme.json"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    networks:
      - traefik-network
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "./traefik.yml:/etc/traefik/traefik.yml"
#      - "./acme.json:/acme.json"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`traefik.example.com`)"
      - "traefik.http.routers.api.service=api@internal"
#      - "traefik.http.routers.api.tls=true"
#      - "traefik.http.routers.api.tls.certresolver=myresolver"

  app1:
    image: sample-react
    ports:
      - "3000:3000"
    networks:
      - traefik-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.app1.rule=Host(`app1.example.com`)"
      - "traefik.http.services.app1.loadbalancer.server.port=3000"
#      - "traefik.http.routers.app1.tls=true"
#      - "traefik.http.routers.app1.tls.certresolver=myresolver"

  # app2:
  #   image: registry.example.com/myapp2:latest  # Private registry example
  #   ports:
  #     - "3001:3001"
  #   networks:
  #     - traefik-network
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.app2.rule=Host(`app2.example.com`)"
  #     - "traefik.http.services.app2.loadbalancer.server.port=3001"
  #     - "traefik.http.routers.app2.tls=true"
  #     - "traefik.http.routers.app2.tls.certresolver=myresolver"
